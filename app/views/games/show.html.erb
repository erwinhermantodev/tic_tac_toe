<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe - Game Details</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f0f0f0;
    }

    .container {
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h1, h2 {
      text-align: center;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    table td {
      width: 33.33%;
      height: 100px;
      text-align: center;
      font-size: 24px;
      border: 1px solid #ddd;
      cursor: pointer;
    }

    table td:hover {
      background-color: #f2f2f2;
    }
  </style>
  <%= csrf_meta_tags %>
</head>
<body>
  <div class="container">
    <h1>Game Details</h1>
    <h2>Player 1: <%= @game.player1_name %> (<%= @game.player1_symbol %>)</h2>
    <h2>Player 2: <%= @game.player2_name %> (<%= @game.player2_symbol %>)</h2>
    <h2>Current Board:</h2>
    <% if @game.status.present? %>
      <p id="gameStatus" data-status="<%= @game.status %>"><%= @game.status %></p>
    <% end %>
    <button onclick="resetGame(<%= @game.id %>)">Reset Game</button>

    <!-- Add a result display -->
    <h2 id="gameResult"></h2>
    <table>
      <% @game.board.each_with_index do |row, i| %>
        <tr>
          <% row.each_with_index do |cell, j| %>
            <td id="cell_<%= i %>_<%= j %>" onclick="makeMove(<%= i %>, <%= j %>)"><%= cell || '-' %></td>
          <% end %>
        </tr>
      <% end %>
    </table>
  </div>
  
  <form id="game_form" action="<%= game_path(@game) %>" method="post">
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <%= hidden_field_tag :row, nil, id: "game_row" %>
    <%= hidden_field_tag :col, nil, id: "game_col" %>
    <%= hidden_field_tag :player, nil, id: "game_player" %>
    <%= hidden_field_tag :_method, :patch %>
    <%= csrf_meta_tags %>
  </form>

<script>
  function makeMove(row, col) {
    // Check if the cell is already filled
    var cellValue = document.getElementById("cell_" + row + "_" + col).innerText;
    if (cellValue.trim() !== '-') {
      alert("This cell is already filled. Please choose an empty cell.");
      return; // Exit the function without submitting the form
    }

    var gameStatusElement = document.getElementById("gameStatus");
    // Check if the status element exists and get its data-status value
    var gameStatus = gameStatusElement ? gameStatusElement.getAttribute("data-status") : "";

    // Check if the game has ended by looking for "wins" in the status
    if (gameStatus.includes("wins")) {
      alert("Game has ended. No more moves allowed.");
      return; // Exit the function to prevent further actions
    }


    // Set the form fields
    document.getElementById("game_row").value = row;
    document.getElementById("game_col").value = col;

    // Fetch the current player's symbol from the form field
    var currentPlayerSymbol = document.getElementById("game_player").value;

    // Determine the next player's symbol based on the current player's symbol
    var nextPlayerSymbol = (currentPlayerSymbol === '<%= @game.player1_symbol %>') ? '<%= @game.player2_symbol %>' : '<%= @game.player1_symbol %>';

    // Optionally, update the UI to reflect the move
    document.getElementById("cell_" + row + "_" + col).innerText = nextPlayerSymbol;

    // Update the hidden form field with the next player's symbol
    document.getElementById("game_player").value = nextPlayerSymbol;

    // Submit the form
    document.getElementById("game_form").submit();
  }

  function resetGame(gameId) {
    fetch(`/games/${gameId}/reset`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': '<%= form_authenticity_token %>'
      }
    })
    .then(response => {
      if (response.ok) {
        // Optionally, handle success response
        window.location.reload(); // Reload the page to reflect changes
      } else {
        // Optionally, handle error response
        console.error('Error resetting game');
      }
    })
    .catch(error => {
      console.error('Error resetting game:', error);
    });
  }


  function checkGameStatus() {
      var gameStatusElement = document.getElementById("gameStatus");
      var currentStatus = gameStatusElement ? gameStatusElement.getAttribute("data-status") : "";
      var previousStatus = localStorage.getItem("previousStatus");
      
      if (currentStatus !== previousStatus && previousStatus !== null) {
        alert("Game status has changed: " + currentStatus);
      }
      
      // Update previous status
      localStorage.setItem("previousStatus", currentStatus);
    }
    
    // Call the function on page load
    window.onload = checkGameStatus;
</script>

</body>
</html>
